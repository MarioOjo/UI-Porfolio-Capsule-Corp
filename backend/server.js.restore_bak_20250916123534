// filepath: c:\Users\User\OneDrive\Desktop\UI-Porfolio-Capsule-Corp\backend\server.js
require("dotenv").config();
const express = require("express");
const mysql = require("mysql2");
const cors = require("cors");
const cookieParser = require("cookie-parser");
let bcrypt;
try { bcrypt = require("bcrypt"); } catch (e) { bcrypt = require("bcryptjs"); }
const jwt = require("jsonwebtoken");

const {
  DB_HOST = "localhost",
  DB_USER = "root",
  DB_PASS = "",
  DB_NAME = "capsule_db",
  DB_PORT = 3306,
  PORT = 5000,
  JWT_SECRET = "change_this_secret",
  JWT_EXPIRES = "7d",
  FRONTEND_ORIGIN = "http://localhost:5173"
} = process.env;

const app = express();
app.use(cookieParser());
app.use(express.json());
app.use(cors({
  origin: FRONTEND_ORIGIN,
  credentials: true,
}));

// REMOVED: restore backup file content cleared to avoid committing secrets or sensitive data.
// This file was a backup and is no longer needed. If you need the original file,
// restore it from your own local backups. Deleted sensitive content on: 2025-10-23.
  } catch (e) {
    return res.status(401).json({ error: "Invalid token" });
  }
}));

app.get("/api/products", asyncHandler(async (req, res) => {
  const [rows] = await pool.query("SELECT id, name, slug, description, price_cents, featured, stock FROM products LIMIT 200");
  res.json(rows);
}));

app.use((err, req, res, next) => { // eslint-disable-line
  console.error(err);
  res.status(err.status || 500).json({ error: err.message || "Internal Server Error" });
});

(async () => {
  try {
    await pool.query("SELECT 1");
    console.log(`Connected to DB: ${DB_NAME}`);
  } catch (err) {
    console.error("Database connection failed:", err.message);
    process.exit(1);
  }
  app.listen(Number(PORT), () => console.log(`Server running on port ${PORT}`));
})();
